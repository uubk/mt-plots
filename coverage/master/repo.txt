0c514e9 Merge branch 'master' of spclgitlab.ethz.ch:mt-maxf/libint
ae107c1 [Simplex::normalizeRowScalar] load vector via the stack
dfc2c53 [Simplex::normalizeRowScalar] do not divide in case gcd is 1
494410a [Simplex::normalizeRowScalar] early-abort in case gcd is 1
da8eec9 [Simplex::normalizeRow] outline scalar code path
605629f FastNorm: Make -Werror happy
f4c806c FastGCD: Revert unintended changes
b22bb6b FastGCD: Add debug output
1a31b75 Fast normalize: Turn off by default
e08f091 Normalize: Fix passthrough of upper vector part
5c8d269 Simplex: Hopefully fix fast normalize
b1e192e Print 'error' in front of error messages
a94328d [Simplex::shiftVariable] Try moving to row in both directions irrespective of the shift direction if we are relaxing the constraint but not if we are unrelaxing the constraint. This improves our pivot-parity with isl.
323fa89 [Simplex::findPivotRow] fix bug where signMatchesDirection was called with 0. Add an assert to avoid that happening, since this is unlikely to be the right thing to do
4bae4df Simplex: add a parameter in findPivot to say whether the row that we are finding a pivot for is considered when finding a pivot row. This fixes test ineqType5, which we now enable.
1f20f6f Simplex: fix indentation
c3cf41c SimplexTest: add test ineqType5
9021bf5 Simplex: fix indentation
f0832a8 Simplex: clang-format
31deb60 [Simplex::shiftVariable] if the unknown is a constraint, then try to pivot both ways. This improves out pivot-parity with isl. Since we now need the index in shiftVariable anyway, remove the overload that takes an Unknown&.
d9e3c29 Simplex: remove unused constructor
1c221e1 Simplex: add pushUndoEntryIfNeeded, which pushes if need_undo is true. Use it instead of undo_stack.emplace (unless we know need_undo is true in a code path)
ad1182a [Simplex::killCol] support needs_undo. If undo is not needed, simply swap with the last column and decrement the column count. This improves our pivot-parity with isl
73d22f5 [Simplex::markRedundant] support needs_undo. If undo is not needed, simply swap with the last row and decrement the row count. This improves our pivot-parity with isl
1181f6e [Simplex::indexFromUnknown] add check to make sure the unknown still exists in the tableau
c8a951c [Simplex::unknownIsRelevant] constraints which no longer exist in the tableau are not relevant shouldn't be processed. This is needed because markRedundant or killCol may remove unknowns from the tableau if undo is not needed.
1386ca7 [Simplex::detectRedundant] check if the constraint was marked redundant via constraintIsRedundant's pivot calls before marking it redundant here.
49df682 [Simplex::markEmpty] support needs_undo
add1de6 [Simplex::markRational] support needs_undo
f04c6ae [Simplex] introduce needs_undo, which is set when snapshots have been requested but false by default
c369dc4 [Simplex::detectRedundant] use unknownIsRelevant, avoiding code duplication
f4580fa [Simplex::markRedundant] rename u to unknown. use reference instead of pointer.
0aea7f7 Simplex: remove apparently superfluous sparsity update
6376154 Add Simplex::rowIsAtLeastZero. This function returns the same as `signOfMax<0> >= 0` but may perform less pivots. This is needed for isl parity.
46bca81 Match assert message to fix failing test case
321ec8a Simplex: Disable fast normalization until transprecision is enabled for now
394eef6 Replace unnamed aborts with actual error messages
03e0db2 Add back content to readme
bb90e82 Merge branch 'master' of spclgitlab.ethz.ch:mt-maxf/libint
5ecf8ba Test a
3f33ebe Test
