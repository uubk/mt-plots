8877f6a Merge branch 'master' of spclgitlab.ethz.ch:mt-maxf/libint
3c5fe2c Merge branch 'master' of spclgitlab.ethz.ch:mt-maxf/libint
620a197 Simplex: add a parameter in findPivot to say whether the row that we are finding a pivot for is considered when finding a pivot row. This fixes test ineqType5, which we now enable.
0cde038 Simplex: fix indentation
2f469e1 SimplexTest: add test ineqType5
607d81d Simplex: fix indentation
d30040a Simplex: clang-format
172ad3b [Simplex::shiftVariable] if the unknown is a constraint, then try to pivot both ways. This improves out pivot-parity with isl. Since we now need the index in shiftVariable anyway, remove the overload that takes an Unknown&.
f0357a8 Simplex: remove unused constructor
f7e2cdf Simplex: add pushUndoEntryIfNeeded, which pushes if need_undo is true. Use it instead of undo_stack.emplace (unless we know need_undo is true in a code path)
0896c19 [Simplex::indexFromUnknown] add check to make sure the unknown still exists in the tableau
7db5fea [Simplex::detectRedundant] check if the constraint was marked redundant via constraintIsRedundant's pivot calls before marking it redundant here.
16abd08 [Simplex::killCol] support needs_undo. If undo is not needed, simply swap with the last column and decrement the column count. This improves our pivot-parity with isl
dfceaaf [Simplex::unknownIsRelevant] constraints which no longer exist in the tableau are not relevant shouldn't be processed. This is needed because markRedundant or killCol may remove unknowns from the tableau if undo is not needed.
9dd40e5 [Simplex::markEmpty] support needs_undo
8c4428b [Simplex::markRedundant] support needs_undo. If undo is not needed, simply swap with the last row and decrement the row count. This improves our pivot-parity with isl
16a2efa Simplex: Disable fast normalization until transprecision is enabled for now
de68290 Merge branch 'master' of spclgitlab.ethz.ch:mt-maxf/libint
fa505ea Simplex: Make fixed-precision int32_t by default
ba58a61 Simplex: Add INT type
